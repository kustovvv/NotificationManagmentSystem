version: '3.8'

services:
  kong:
    image: kong:latest
    container_name: kong
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: "/usr/local/kong/declarative/kong.yml"
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: "0.0.0.0:8001"
      KONG_PROXY_LISTEN: "0.0.0.0:8000"
    volumes:
      - ./kong.yml:/usr/local/kong/declarative/kong.yml
    ports:
      - "8000:8000"
      - "8001:8001"
      - "8443:8443"
    restart: always
    networks:
      - app-network
    healthcheck:  # Add healthcheck
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 3

  users-db:
    image: postgres:13
    container_name: users-db
    environment:
      POSTGRES_DB: users_service_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: zegorov_319783111
    ports:
      - "5435:5432"
    volumes:
      - users_data:/var/lib/postgresql/data
      - ./user-service/app/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network

  orders-db:
    image: postgres:13
    container_name: orders-db
    environment:
      POSTGRES_DB: orders_service_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: zegorov_319783111
    ports:
      - "5436:5432"
    volumes:
      - orders_data:/var/lib/postgresql/data
      - ./order-service/app/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network

  products-db:
    image: postgres:13
    container_name: products-db
    environment:
      POSTGRES_DB: products_service_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: zegorov_319783111
    ports:
      - "5437:5432"
    volumes:
      - products_data:/var/lib/postgresql/data
      - ./product-service/app/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network

  auth-service:
    build:
      context: .
      dockerfile: ./auth-service/Dockerfile
    container_name: auth-service
    ports:
      - "5006:5001"
    networks:
      - app-network
    depends_on:
      - user-service

  user-service:
    build:
      context: .
      dockerfile: ./user-service/Dockerfile
    container_name: user-service
    environment:
      DB_NAME: users_service_db
      DB_USER: postgres
      DB_PASSWORD: zegorov_319783111
      DB_HOST: users-db
      DB_PORT: 5432
    ports:
      - "5007:5002"
    networks:
      - app-network
    depends_on:
      - users-db

  product-service:
    build:
      context: .
      dockerfile: ./product-service/Dockerfile
    container_name: product-service
    environment:
      DB_NAME: products_service_db
      DB_USER: postgres
      DB_PASSWORD: zegorov_319783111
      DB_HOST: products-db
      DB_PORT: 5432
    ports:
      - "5008:5003"  # Changed port
    networks:
      - app-network
    depends_on:
      - products-db

  order-service:
    build:
      context: .
      dockerfile: ./order-service/Dockerfile
    container_name: order-service
    environment:
      DB_NAME: orders_service_db
      DB_USER: postgres
      DB_PASSWORD: zegorov_319783111
      DB_HOST: orders-db
      DB_PORT: 5432
    ports:
      - "5009:5004"  # Changed port
    networks:
      - app-network
    depends_on:
      - orders-db

volumes:
  users_data:
  orders_data:
  products_data:

networks:
  app-network:
    driver: bridge
